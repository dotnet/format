# Branches that trigger a build on commit
trigger:
- master
- feature/*

# Branches that trigger builds on PR
pr:
- master
- feature/*

jobs:

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  variables:
    _os: Windows
  strategy:
    maxParallel: 4
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 20
  steps:
    - script: eng\common\cibuild.cmd -configuration $(_configuration) -prepareMachine
      displayName: Build and Test
    - task: PublishTestResults@2
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)\*.xml'
        mergeTestResults: true
        testRunTitle: '$(_os) $(_configuration)'
      condition: always()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: '$(_os) $(_configuration)'
      continueOnError: true
      condition: not(succeeded())

- job: Linux
  pool:
    name: NetCorePublic-Pool
    queue: BuildPool.Ubuntu.1604.Amd64.Open
  variables:
    _os: Linux
  strategy:
    maxParallel: 4
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 90
  steps:
    - script: ./eng/common/cibuild.sh --configuration $(_configuration) --prepareMachine
      displayName: Build and Test
    - task: PublishTestResults@2
      displayName: Publish xUnit Test Results
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_configuration)/*.xml'
        mergeTestResults: true
        testRunTitle: '$(_os) $(_configuration)'
      condition: always()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_configuration)'
        ArtifactName: '$(_os) $(_configuration)'
      continueOnError: true
      condition: not(succeeded())

- job: Windows_Spanish
  pool:
   name: NetCorePublic-Pool
   queue: buildpool.windows.10.amd64.es.vs2017.open
  variables:
    _os: Windows
  strategy:
    maxParallel: 4
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 20
  steps:
    - script: eng\common\cibuild.cmd -configuration $(_configuration) -prepareMachine
      displayName: Build and Test
    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)\*.xml'
        mergeTestResults: true
        testRunTitle: 'Spanish $(_os) $(_configuration)'
      condition: always()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: 'Spanish $(_os) $(_configuration)'
      continueOnError: true
      condition: not(succeeded())

- job: Formatting_Check
  pool:
    vmImage: 'vs2017-win2016'
  timeoutInMinutes: 5
  steps:
    - script: dotnet run --project ./src/dotnet-format.csproj -- @validate.rsp
      displayName: Run dotnet-format
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\'
        ArtifactName: 'Formatting Check'
      continueOnError: true
      condition: not(succeeded())
