<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <OutputType>Exe</OutputType>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <RootNamespace>Microsoft.CodeAnalysis.Tools</RootNamespace>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <Nullable>Enable</Nullable>

    <NoWarn>$(NoWarn);8002</NoWarn>
    <Description>Command line tool for formatting C# and Visual Basic code files based on .editorconfig settings.</Description>

    <!-- Copy nuget assemblies to build directory. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

    <!-- Always run on the latest runtime installed. -->
    <RuntimeFrameworkVersion>2.1.0-rc1</RuntimeFrameworkVersion>
    <RollForward>LatestMajor</RollForward>

    <IsPackable>true</IsPackable>
    <PackAsTool>true</PackAsTool>
    <PackageIcon>packageicon.png</PackageIcon>

    <!--
      These identifiers are for generating the shim'd core executables for signing. Not all options
      from $(RoslynPortableRuntimeIdentifiers) work or make sense in this context.
    -->
    <PackAsToolShimRuntimeIdentifiers>win-x64;win-x86;osx-x64</PackAsToolShimRuntimeIdentifiers>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.CommandLine" Version="$(SystemCommandLineVersion)" />
    <PackageReference Include="System.CommandLine.Rendering" Version="$(SystemCommandLineRenderingVersion)" />

    <PackageReference Include="System.Text.Json" Version="$(SystemTextJsonVersion)" />

    <PackageReference Include="Microsoft.Build" Version="$(MicrosoftBuildFrameworkVersion)" ExcludeAssets="Runtime" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Framework" Version="$(MicrosoftBuildFrameworkVersion)" ExcludeAssets="Runtime" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Locator" Version="$(MicrosoftBuildLocatorVersion)" />

    <PackageReference Include="Microsoft.CodeAnalysis" Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Features " Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.Features" Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic" Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Features"  Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Workspaces" Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" Version="$(MicrosoftCodeAnalysisVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="$(MicrosoftCodeAnalysisVersion)" />

    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="$(MicrosoftExtensionsDependencyInjectionVersion)" />
    <PackageReference Include="Microsoft.Extensions.FileSystemGlobbing" Version="$(MicrosoftExtensionsFileSystemGlobbingVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="$(MicrosoftExtensionsLoggingVersion)" />

    <!--
      Workaround for the inability to load the NugetSdkResolver from the .NET 5 SDK
      https://github.com/microsoft/MSBuildLocator/issues/88
    -->
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="dotnet-format.UnitTests" />
    <InternalsVisibleTo Include="dotnet-format.Performance" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\README.md" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx" GenerateSource="true" />
  </ItemGroup>

</Project>
