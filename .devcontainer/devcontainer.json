// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.177.0/containers/dotnet
{
  "name": "C# (.NET)",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      // The VARIANT here must align with a dotnet container image that
      // is publicly available on https://mcr.microsoft.com/v2/vscode/devcontainers/dotnet/tags/list.
      // We'll default to `latest` as the default. Generally, the .NET version that is baked
      // into the image by default doesn't matter since we end up installing our own
      // local version and using that by default in the container environment.
      "VARIANT": "latest",
    }
  },
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "files.associations": {
      "*.csproj": "msbuild",
      "*.fsproj": "msbuild",
      "*.globalconfig": "ini",
      "*.manifest": "xml",
      "*.nuspec": "xml",
      "*.pkgdef": "ini",
      "*.projitems": "msbuild",
      "*.props": "msbuild",
      "*.resx": "xml",
      "*.rsp": "Powershell",
      "*.ruleset": "xml",
      "*.settings": "xml",
      "*.shproj": "msbuild",
      "*.slnf": "json",
      "*.targets": "msbuild",
      "*.vbproj": "msbuild",
      "*.vsixmanifest": "xml",
      "*.vstemplate": "xml",
      "*.xlf": "xml",
      "*.yml": "azure-pipelines"
    },
    "terminal.integrated.defaultProfile.linux": "pwsh",
    // ms-dotnettools.csharp settings
    "omnisharp.path": "latest",
    "omnisharp.defaultLaunchSolution": "format.sln",
    "omnisharp.disableMSBuildDiagnosticWarning": true,
    "omnisharp.useModernNet": true,
    "omnisharp.enableAsyncCompletion": true,
    "omnisharp.enableEditorConfigSupport": true,
    "omnisharp.enableImportCompletion": true,
    "omnisharp.enableRoslynAnalyzers": true,
    "omnisharp.organizeImportsOnFormat": true,
    // ms-vscode.powershell settings
    "powershell.promptToUpdatePowerShell": false,
    "powershell.integratedConsole.showOnStartup": false,
    "powershell.startAutomatically": false,
    // ms-azure-devops.azure-pipelines settings
    "azure-pipelines.customSchemaFile": ".vscode/dnceng-schema.json"
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-dotnettools.csharp",
    "editorconfig.editorconfig",
    "formulahendry.dotnet-test-explorer",
    "tintoy.msbuild-project-tools",
    "ms-vscode.powershell",
    "ms-azure-devops.azure-pipelines"
  ],
  // Use 'onCreateCommand' to run commands during container creation.
  "onCreateCommand": "bash -i ${containerWorkspaceFolder}/.devcontainer/scripts/container-creation.sh", // Add the locally installed dotnet to the path to ensure that it is activated
  // This is needed so that things like the C# extension can resolve the correct SDK version
  "remoteEnv": {
    "PATH": "${containerWorkspaceFolder}/.dotnet:${containerEnv:PATH}",
    "DOTNET_MULTILEVEL_LOOKUP": "0",
    "TARGET": "net9.0",
    "DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER": "true"
  },
  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  //"remoteUser": "vscode"
}